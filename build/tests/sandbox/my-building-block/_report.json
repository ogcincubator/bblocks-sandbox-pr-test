{
  "title": "Validation report for avillar.sandbox.my-building-block - My Building Block",
  "bblockName": "My Building Block",
  "bblockId": "avillar.sandbox.my-building-block",
  "generated": "2025-09-04T09:20:58.628885+00:00",
  "result": false,
  "items": [
    {
      "source": {
        "type": "TEST_RESOURCE",
        "requireFail": false,
        "filename": "_sources/my-building-block/tests/resource1.json",
        "url": "https://raw.githubusercontent.com/ogcincubator/bblocks-sandbox-pr-test/undefined/_sources/my-building-block/tests/resource1.json",
        "language": "json",
        "sourceUrl": "https://gist.github.com/avillar/4a06ed5c88e8cb4662873a805ae10e33/raw/8eb0510d1121371940d860846448833706050533/resource1.json"
      },
      "result": true,
      "sections": [
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using resource1.json from test resources"
            },
            {
              "op": "jsonld-uplift",
              "isError": false,
              "message": "JSON-LD context is present - uplifting"
            },
            {
              "op": "jsonld-create",
              "filename": "resource1.jsonld",
              "isError": false,
              "message": "Output JSON-LD resource1.jsonld created"
            },
            {
              "op": "ttl-create",
              "empty": false,
              "filename": "resource1.ttl",
              "size": 2,
              "isError": false,
              "message": "Output Turtle resource1.ttl created"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": true,
              "isError": false,
              "message": "Validation passed"
            }
          ]
        },
        {
          "name": "SEMANTIC_UPLIFT",
          "title": "Semantic Uplift",
          "entries": [
            {
              "isError": false,
              "message": "Running pre-uplift jq transform step from inline code"
            },
            {
              "isError": false,
              "message": "Running pre-uplift jq transform step from inline code"
            },
            {
              "isError": false,
              "message": "Running post-uplift sparql-construct transform step from inline code"
            },
            {
              "isError": false,
              "message": "Running post-uplift sparql-update transform step from inline code"
            },
            {
              "isError": false,
              "message": "Running post-uplift shacl transform step from uplift/test.shacl"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "TEST_RESOURCE",
        "requireFail": true,
        "filename": "_sources/my-building-block/tests/resource2.json",
        "url": "https://raw.githubusercontent.com/ogcincubator/bblocks-sandbox-pr-test/undefined/_sources/my-building-block/tests/resource2.json",
        "language": "json",
        "sourceUrl": "https://gist.github.com/avillar/4a06ed5c88e8cb4662873a805ae10e33/raw/8eb0510d1121371940d860846448833706050533/resource2.json"
      },
      "result": true,
      "sections": [
        {
          "name": "GENERAL",
          "title": "General",
          "entries": [
            {
              "op": "require-fail",
              "isError": false,
              "message": "Test was expected to fail and it did."
            }
          ]
        },
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using resource2.json from test resources"
            },
            {
              "op": "jsonld-uplift",
              "isError": false,
              "message": "JSON-LD context is present - uplifting"
            },
            {
              "op": "jsonld-create",
              "filename": "resource2.jsonld",
              "isError": false,
              "message": "Output JSON-LD resource2.jsonld created"
            },
            {
              "op": "ttl-create",
              "empty": false,
              "filename": "resource2.ttl",
              "size": 2,
              "isError": false,
              "message": "Output Turtle resource2.ttl created"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": false,
              "exception": "ValidationError",
              "errorMessage": "123 is not of type 'string'",
              "isError": true,
              "message": "ValidationError: 123 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['a']:\n    {'format': 'uri',\n     'type': 'string',\n     'x-jsonld-id': 'https://example.org/my-bb-model/a',\n     'x-jsonld-type': '@id'}\n\nOn instance['a']:\n    123"
            }
          ]
        },
        {
          "name": "SEMANTIC_UPLIFT",
          "title": "Semantic Uplift",
          "entries": [
            {
              "isError": false,
              "message": "Running pre-uplift jq transform step from inline code"
            },
            {
              "isError": false,
              "message": "Running pre-uplift jq transform step from inline code"
            },
            {
              "isError": false,
              "message": "Running post-uplift sparql-construct transform step from inline code"
            },
            {
              "isError": false,
              "message": "Running post-uplift sparql-update transform step from inline code"
            },
            {
              "isError": false,
              "message": "Running post-uplift shacl transform step from uplift/test.shacl"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "TEST_RESOURCE",
        "requireFail": true,
        "filename": "_sources/my-building-block/tests/resource3.json",
        "url": "https://raw.githubusercontent.com/ogcincubator/bblocks-sandbox-pr-test/undefined/_sources/my-building-block/tests/resource3.json",
        "language": "json",
        "sourceUrl": "https://gist.github.com/avillar/4a06ed5c88e8cb4662873a805ae10e33/raw/8eb0510d1121371940d860846448833706050533/resource3.json"
      },
      "result": true,
      "sections": [
        {
          "name": "GENERAL",
          "title": "General",
          "entries": [
            {
              "op": "require-fail",
              "isError": false,
              "message": "Test was expected to fail and it did."
            }
          ]
        },
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using resource3.json from test resources"
            },
            {
              "op": "jsonld-uplift",
              "isError": false,
              "message": "JSON-LD context is present - uplifting"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": false,
              "exception": "ValidationError",
              "errorMessage": "'b' is a required property",
              "isError": true,
              "message": "ValidationError: 'b' is a required property\n\nFailed validating 'required' in schema:\n    {'$defs': {'test': {'type': 'string'}},\n     '$schema': 'https://json-schema.org/draft/2020-12/schema',\n     'description': 'Schema for my building block',\n     'properties': {'a': {'format': 'uri',\n                          'type': 'string',\n                          'x-jsonld-id': 'https://example.org/my-bb-model/a',\n                          'x-jsonld-type': '@id'},\n                    'b': {'type': 'number',\n                          'x-jsonld-id': 'https://example.org/my-bb-model/b'},\n                    'c': {'$ref': 'https://raw.githubusercontent.com/ogcincubator/bblocks-sandbox-pr-test/undefined/build/annotated/sandbox/my-building-block/schema.yaml#/$defs/test'},\n                    'd': {'$ref': 'https://raw.githubusercontent.com/ogcincubator/bblocks-sandbox-pr-test/undefined/build/annotated/sandbox/enumerations/legalStatus/schema.yaml'}},\n     'required': ['a', 'b'],\n     'type': 'object'}\n\nOn instance:\n    {'a': 'http://www.google.es'}"
            }
          ]
        },
        {
          "name": "SEMANTIC_UPLIFT",
          "title": "Semantic Uplift",
          "entries": [
            {
              "isError": false,
              "message": "Running pre-uplift jq transform step from inline code"
            }
          ]
        },
        {
          "name": "UNKNOWN",
          "title": "Unknown errors",
          "entries": [
            {
              "exception": "ValueError",
              "isError": true,
              "message": "Traceback (most recent call last):\n,  File \"/src/ogc/bblocks/validate.py\", line 186, in _validate_resource\n    result = validator.validate(filename, output_filename, report,\n,  File \"/src/ogc/bblocks/validation/rdf.py\", line 314, in validate\n    graph = self._load_graph(filename, output_filename, report,\n,  File \"/src/ogc/bblocks/validation/rdf.py\", line 171, in _load_graph\n    json_doc = self.uplifter.pre_uplift(report, json_doc)\n,  File \"/src/ogc/bblocks/validation/uplift.py\", line 40, in pre_uplift\n    return self._run_steps('pre', report, json_doc)\n,  File \"/src/ogc/bblocks/validation/uplift.py\", line 36, in _run_steps\n    input_data = getattr(self, func_name)(code, input_data, *args)\n,  File \"/src/ogc/bblocks/validation/uplift.py\", line 47, in _pre_jq\n    return jq.compile(code).input_value(json_doc).first()\n,  File \"jq.pyx\", line 329, in jq._ProgramWithInput.first\n,  File \"jq.pyx\", line 373, in jq._ResultIterator.__next__\n,ValueError: null (null) and number (66) cannot be multiplied\n"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "TEST_RESOURCE",
        "requireFail": true,
        "filename": "_sources/my-building-block/tests/resource4.json",
        "url": "https://raw.githubusercontent.com/ogcincubator/bblocks-sandbox-pr-test/undefined/_sources/my-building-block/tests/resource4.json",
        "language": "json",
        "sourceUrl": "https://gist.github.com/avillar/4a06ed5c88e8cb4662873a805ae10e33/raw/8eb0510d1121371940d860846448833706050533/resource4.json"
      },
      "result": true,
      "sections": [
        {
          "name": "GENERAL",
          "title": "General",
          "entries": [
            {
              "op": "require-fail",
              "isError": false,
              "message": "Test was expected to fail and it did."
            }
          ]
        },
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "op": "jsonld-uplift",
              "isError": false,
              "message": "JSON-LD context is present - uplifting"
            },
            {
              "op": "jsonld-create",
              "filename": "resource4.jsonld",
              "isError": false,
              "message": "Output JSON-LD resource4.jsonld created"
            },
            {
              "op": "ttl-create",
              "empty": false,
              "filename": "resource4.ttl",
              "size": 2,
              "isError": false,
              "message": "Output Turtle resource4.ttl created"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "exception": "JSONDecodeError",
              "line": 2,
              "col": 3,
              "isError": true,
              "message": "Error parsing JSON example: Expecting property name enclosed in double quotes: line 2 column 3 (char 4) on or near line 2 column 3"
            }
          ]
        },
        {
          "name": "SEMANTIC_UPLIFT",
          "title": "Semantic Uplift",
          "entries": [
            {
              "isError": false,
              "message": "Running pre-uplift jq transform step from inline code"
            },
            {
              "isError": false,
              "message": "Running pre-uplift jq transform step from inline code"
            },
            {
              "isError": false,
              "message": "Running post-uplift sparql-construct transform step from inline code"
            },
            {
              "isError": false,
              "message": "Running post-uplift sparql-update transform step from inline code"
            },
            {
              "isError": false,
              "message": "Running post-uplift shacl transform step from uplift/test.shacl"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "TEST_RESOURCE",
        "requireFail": false,
        "filename": "_sources/my-building-block/tests/one-again.json",
        "url": "https://raw.githubusercontent.com/ogcincubator/bblocks-sandbox-pr-test/undefined/_sources/my-building-block/tests/one-again.json",
        "language": "json",
        "sourceUrl": "https://gist.github.com/avillar/4a06ed5c88e8cb4662873a805ae10e33/raw/8eb0510d1121371940d860846448833706050533/resource1.json"
      },
      "result": true,
      "sections": [
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using one-again.json from test resources"
            },
            {
              "op": "jsonld-uplift",
              "isError": false,
              "message": "JSON-LD context is present - uplifting"
            },
            {
              "op": "jsonld-create",
              "filename": "one-again.jsonld",
              "isError": false,
              "message": "Output JSON-LD one-again.jsonld created"
            },
            {
              "op": "ttl-create",
              "empty": false,
              "filename": "one-again.ttl",
              "size": 2,
              "isError": false,
              "message": "Output Turtle one-again.ttl created"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": true,
              "isError": false,
              "message": "Validation passed"
            }
          ]
        },
        {
          "name": "SEMANTIC_UPLIFT",
          "title": "Semantic Uplift",
          "entries": [
            {
              "isError": false,
              "message": "Running pre-uplift jq transform step from inline code"
            },
            {
              "isError": false,
              "message": "Running pre-uplift jq transform step from inline code"
            },
            {
              "isError": false,
              "message": "Running post-uplift sparql-construct transform step from inline code"
            },
            {
              "isError": false,
              "message": "Running post-uplift sparql-update transform step from inline code"
            },
            {
              "isError": false,
              "message": "Running post-uplift shacl transform step from uplift/test.shacl"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "EXAMPLE",
        "requireFail": false,
        "filename": "build/tests/sandbox/my-building-block/example_3_1.json",
        "url": "https://raw.githubusercontent.com/ogcincubator/bblocks-sandbox-pr-test/undefined/build/tests/sandbox/my-building-block/example_3_1.json",
        "exampleIndex": 3,
        "snippetIndex": 1,
        "language": "application/json"
      },
      "result": true,
      "sections": [
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using example_3_1.json from examples"
            },
            {
              "op": "jsonld-uplift",
              "isError": false,
              "message": "JSON-LD context is present - uplifting"
            },
            {
              "op": "jsonld-create",
              "filename": "example_3_1.jsonld",
              "isError": false,
              "message": "Output JSON-LD example_3_1.jsonld created"
            },
            {
              "op": "ttl-create",
              "empty": false,
              "filename": "example_3_1.ttl",
              "size": 4,
              "isError": false,
              "message": "Output Turtle example_3_1.ttl created"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": true,
              "isError": false,
              "message": "Validation passed"
            }
          ]
        },
        {
          "name": "SEMANTIC_UPLIFT",
          "title": "Semantic Uplift",
          "entries": [
            {
              "isError": false,
              "message": "Running pre-uplift jq transform step from inline code"
            },
            {
              "isError": false,
              "message": "Running pre-uplift jq transform step from inline code"
            },
            {
              "isError": false,
              "message": "Running post-uplift sparql-construct transform step from inline code"
            },
            {
              "isError": false,
              "message": "Running post-uplift sparql-update transform step from inline code"
            },
            {
              "isError": false,
              "message": "Running post-uplift shacl transform step from uplift/test.shacl"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "EXAMPLE",
        "requireFail": false,
        "filename": "build/tests/sandbox/my-building-block/example_4_1.ttl",
        "url": "https://raw.githubusercontent.com/ogcincubator/bblocks-sandbox-pr-test/undefined/build/tests/sandbox/my-building-block/example_4_1.ttl",
        "exampleIndex": 4,
        "snippetIndex": 1,
        "language": "text/turtle"
      },
      "result": true,
      "sections": [
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using example_4_1.ttl from examples"
            },
            {
              "op": "ttl-create",
              "empty": false,
              "filename": "example_4_1.ttl",
              "size": 1,
              "isError": false,
              "message": "Output Turtle example_4_1.ttl created"
            }
          ]
        },
        {
          "name": "TURTLE",
          "title": "Turtle",
          "entries": [
            {
              "isError": false,
              "message": "Prefixes are defined for dct, ex"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "EXAMPLE",
        "requireFail": false,
        "filename": "build/tests/sandbox/my-building-block/example_5_1.json",
        "url": "https://raw.githubusercontent.com/ogcincubator/bblocks-sandbox-pr-test/undefined/build/tests/sandbox/my-building-block/example_5_1.json",
        "exampleIndex": 5,
        "snippetIndex": 1,
        "language": "application/json"
      },
      "result": false,
      "sections": [
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using example_5_1.json from examples"
            },
            {
              "op": "jsonld-uplift",
              "isError": false,
              "message": "JSON-LD context is present - uplifting"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": false,
              "exception": "ValidationError",
              "errorMessage": "'a' is a required property",
              "isError": true,
              "message": "ValidationError: 'a' is a required property\n\nFailed validating 'required' in schema:\n    {'$defs': {'test': {'type': 'string'}},\n     '$schema': 'https://json-schema.org/draft/2020-12/schema',\n     'description': 'Schema for my building block',\n     'properties': {'a': {'format': 'uri',\n                          'type': 'string',\n                          'x-jsonld-id': 'https://example.org/my-bb-model/a',\n                          'x-jsonld-type': '@id'},\n                    'b': {'type': 'number',\n                          'x-jsonld-id': 'https://example.org/my-bb-model/b'},\n                    'c': {'$ref': 'https://raw.githubusercontent.com/ogcincubator/bblocks-sandbox-pr-test/undefined/build/annotated/sandbox/my-building-block/schema.yaml#/$defs/test'},\n                    'd': {'$ref': 'https://raw.githubusercontent.com/ogcincubator/bblocks-sandbox-pr-test/undefined/build/annotated/sandbox/enumerations/legalStatus/schema.yaml'}},\n     'required': ['a', 'b'],\n     'type': 'object'}\n\nOn instance:\n    {'dct:title': 'Juan'}"
            }
          ]
        },
        {
          "name": "SEMANTIC_UPLIFT",
          "title": "Semantic Uplift",
          "entries": [
            {
              "isError": false,
              "message": "Running pre-uplift jq transform step from inline code"
            }
          ]
        },
        {
          "name": "UNKNOWN",
          "title": "Unknown errors",
          "entries": [
            {
              "exception": "ValueError",
              "isError": true,
              "message": "Traceback (most recent call last):\n,  File \"/src/ogc/bblocks/validate.py\", line 186, in _validate_resource\n    result = validator.validate(filename, output_filename, report,\n,  File \"/src/ogc/bblocks/validation/rdf.py\", line 314, in validate\n    graph = self._load_graph(filename, output_filename, report,\n,  File \"/src/ogc/bblocks/validation/rdf.py\", line 171, in _load_graph\n    json_doc = self.uplifter.pre_uplift(report, json_doc)\n,  File \"/src/ogc/bblocks/validation/uplift.py\", line 40, in pre_uplift\n    return self._run_steps('pre', report, json_doc)\n,  File \"/src/ogc/bblocks/validation/uplift.py\", line 36, in _run_steps\n    input_data = getattr(self, func_name)(code, input_data, *args)\n,  File \"/src/ogc/bblocks/validation/uplift.py\", line 47, in _pre_jq\n    return jq.compile(code).input_value(json_doc).first()\n,  File \"jq.pyx\", line 329, in jq._ProgramWithInput.first\n,  File \"jq.pyx\", line 373, in jq._ResultIterator.__next__\n,ValueError: null (null) and number (66) cannot be multiplied\n"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "EXAMPLE",
        "requireFail": false,
        "filename": "build/tests/sandbox/my-building-block/example_6_1.jsonld",
        "url": "https://raw.githubusercontent.com/ogcincubator/bblocks-sandbox-pr-test/undefined/build/tests/sandbox/my-building-block/example_6_1.jsonld",
        "exampleIndex": 6,
        "snippetIndex": 1,
        "language": "application/ld+json"
      },
      "result": false,
      "sections": [
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using example_6_1.jsonld from examples"
            },
            {
              "op": "ttl-create",
              "empty": true,
              "filename": "example_6_1.ttl",
              "size": 0,
              "isError": true,
              "message": "**Empty** output Turtle example_6_1.ttl created"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": false,
              "exception": "ValidationError",
              "errorMessage": "'a' is a required property",
              "isError": true,
              "message": "ValidationError: 'a' is a required property\n\nFailed validating 'required' in schema:\n    {'$defs': {'test': {'type': 'string'}},\n     '$schema': 'https://json-schema.org/draft/2020-12/schema',\n     'description': 'Schema for my building block',\n     'properties': {'a': {'format': 'uri',\n                          'type': 'string',\n                          'x-jsonld-id': 'https://example.org/my-bb-model/a',\n                          'x-jsonld-type': '@id'},\n                    'b': {'type': 'number',\n                          'x-jsonld-id': 'https://example.org/my-bb-model/b'},\n                    'c': {'$ref': 'https://raw.githubusercontent.com/ogcincubator/bblocks-sandbox-pr-test/undefined/build/annotated/sandbox/my-building-block/schema.yaml#/$defs/test'},\n                    'd': {'$ref': 'https://raw.githubusercontent.com/ogcincubator/bblocks-sandbox-pr-test/undefined/build/annotated/sandbox/enumerations/legalStatus/schema.yaml'}},\n     'required': ['a', 'b'],\n     'type': 'object'}\n\nOn instance:\n    {'@context': {'q': 'http://q.net/'}, 'dct:title': 'Juan', 'q:a': 'bcd'}"
            }
          ]
        },
        {
          "name": "SEMANTIC_UPLIFT",
          "title": "Semantic Uplift",
          "entries": [
            {
              "isError": false,
              "message": "Running post-uplift sparql-construct transform step from inline code"
            },
            {
              "isError": false,
              "message": "Running post-uplift sparql-update transform step from inline code"
            },
            {
              "isError": false,
              "message": "Running post-uplift shacl transform step from uplift/test.shacl"
            }
          ]
        }
      ]
    }
  ],
  "globalErrors": {},
  "counts": {
    "total": 9,
    "passed": 7,
    "failed": 2
  }
}